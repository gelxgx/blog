import{q as a,g as e,K as r}from"./common-1984dd55.js";const t='{"title":"【计算机网络】","frontmatter":{"date":"2022-01-29","title":"【计算机网络】","tags":["计算机网络"],"describe":"进程、线程&网络层"},"headers":[{"level":3,"title":"一、进程&线程","slug":"一、进程-线程"},{"level":3,"title":"二、TCP/IP","slug":"二、tcp-ip"}],"relativePath":"docs/HTTP/HTTP.md","lastUpdated":1646063815125.8818}';var d={};const h=[r('<h3 id="一、进程-线程"><a class="header-anchor" href="#一、进程-线程" aria-hidden="true">#</a> 一、进程&amp;线程</h3><h4 id="_1-进程"><a class="header-anchor" href="#_1-进程" aria-hidden="true">#</a> 1.进程</h4><p>进程可以理解为是一个<strong>运行环境</strong>。当启动程序时，系统会为这个程序开辟一块内存地址，用于给程序创建运行环境，内存地址中包含着：运行代码、程序所使用的数据、执行程序任务的主线程。</p><p>它是<strong>资源分配的最小单位</strong></p><h4 id="_2-线程"><a class="header-anchor" href="#_2-线程" aria-hidden="true">#</a> 2.线程</h4><p>线程是包含在进程中的一个子项，它是执行一个任务的具体流程，一个进程里可以有多个线程，也就是常说的“多线程”，可以提升程序运行效率</p><p>它是<strong>程序执行的最小单位</strong></p><h4 id="_3-之间的关系"><a class="header-anchor" href="#_3-之间的关系" aria-hidden="true">#</a> 3.之间的关系</h4><ul><li>进程中任一线程执行出错，都会导致线程崩溃</li><li>线程之间共享进程中的数据（同在一块内存地址中，数据通过内存共享）</li><li>进程被关闭后，系统会将进程所占用的内存进行回收</li><li>进程与进程的内容相互隔离（通过<code>TCP/IP</code>进行数据传输）</li></ul><h4 id="_4-拓展"><a class="header-anchor" href="#_4-拓展" aria-hidden="true">#</a> 4.拓展</h4><h3 id="二、tcp-ip"><a class="header-anchor" href="#二、tcp-ip" aria-hidden="true">#</a> 二、TCP/IP</h3>',11)];d.render=function(r,t,d,i,s,l){return a(),e("div",null,h)};export{t as __pageData,d as default};
