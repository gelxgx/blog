import{q as e,g as n,l as o,K as r,j as l}from"./common-1984dd55.js";const t='{"title":"【源码第四期】理解koa-compose","frontmatter":{"date":"2021-11-08","title":"【源码第四期】理解koa-compose","tags":["源码"],"describe":"浅析 koa-compose 中间件原理"},"headers":[{"level":3,"title":"1. 阅读前准备","slug":"_1-阅读前准备"},{"level":3,"title":"2. 学习目标","slug":"_2-学习目标"},{"level":3,"title":"3.开始阅读","slug":"_3-开始阅读"},{"level":3,"title":"4.总结","slug":"_4-总结"}],"relativePath":"docs/soundCode/koa-compose.md","lastUpdated":1646063815125.8818}';var i={};const a=r('',17),s=l("ul",null,[l("li",null,"如果这个参数是数组，且数组中的每一项都是函数时，则继续往下执行dispatch函数")],-1),c=l("div",{class:"language-"},[l("pre",null,[l("code",null,"function dispatch (i) {\n      if (i <= index) return Promise.reject(new Error('next() called multiple times'))\n      index = i\n      let fn = middleware[i]\n      if (i === middleware.length) fn = next\n      if (!fn) return Promise.resolve()\n      try {\n        return Promise.resolve(fn(context, dispatch.bind(null, i + 1)))\n      } catch (err) {\n        return Promise.reject(err)\n      }\n    }\n")])],-1),d=l("p",null,"dispatch函数做了以下这些事：",-1),p=l("ul",null,[l("li",null,"首先判断是否存在next()多次调用的情况，如果存在则会直接报错"),l("li",null,"接着陆续取出middlewatre中的第1、2、3...个函数并开始执行")],-1),u=l("ul",null,[l("li",null,"如果检测到为最后一个时，next为undefined，此时fn不是函数，直接返回resolve"),l("li",null,"如果不是最后一个，则也会返回一个resolve，但resolve内容是取到下一个middleware中的函数")],-1),m=r('',15);i.render=function(r,l,t,i,h,f){return e(),n("div",null,[a,o(""),s,c,d,p,o(""),u,o(""),m])};export{t as __pageData,i as default};
